name: Run Tests

on:
  pull_request:
    paths:
      - "src/**"
      - "tests/**"
      - ".github/**"
      - "examples/**"
      - "setup.py"
    types: [opened, synchronize, reopened]
  workflow_call:
  workflow_dispatch:

env:
  HF_HOME: ~/hf_cache
  TESTING_MOCKED_DATALOADERS: "1"
  IS_GITHUB_CI: "1"

jobs:
  install-deps:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up python 3.8
      uses: actions/setup-python@v5
      with:
        python-version: 3.8
    - name: Activate python cache
      uses: actions/cache@v3
      with:
        path: |
          ${{ env.pythonLocation }}
          ${{ env.HF_HOME }}
          .venv
        key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}
      # Note: Don't use cache for prod
    - name: Install the library
      run: |
        pip install uv
        uv venv
        uv pip install -e .[test_prod]
        uv pip install pytest-reportlog tabulate
  
  run-tests:
    needs: install-deps
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pytorch-version: [
          latest,
          minimum,
        ]
        test-kind: [
          test_prod,
          test_core,
          test_cli,
          test_big_modeling,
          test_deepspeed,
          test_fsdp,
          test_example_differences,
          test_checkpoint_step,
          test_checkpoint_epoch,
          test_rest
        ]
    steps:
    - uses: actions/checkout@v3.1.0
    - name: Set up python 3.8
      uses: actions/setup-python@v5
      with:
        python-version: 3.8

    - name: Activate python cache
      uses: actions/cache@v3
      with:
        path: |
          ${{ env.pythonLocation }}
          ${{ env.HF_HOME }}
          .venv
        key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}
    
    - name: Install the library
      run: |
        if [[ ${{ matrix.test-kind }} = test_prod ]]; then uv pip install -e .[test_prod]; fi
        if [[ ${{ matrix.test-kind }} != test_prod ]]; then uv pip install -e .[testing,test_trackers]; fi
        if [[ ${{ matrix.test-kind }} = test_rest ]]; then uv pip uninstall comet_ml; fi
        if [[ ${{ matrix.test-kind }} = minimum ]]; then uv pip install torch==1.10.0; fi
        uv pip install pytest-reportlog tabulate
    
    # - name: Run Tests
    #   env: 
    #     PYTORCH_VERSION: ${{ matrix.pytorch-version }}
    #   run: |
    #     make ${{ matrix.test-kind }}

    # - name: Generate Report
    #   if: always()
    #   run: |
    #     python utils/log_reports.py >> $GITHUB_STEP_SUMMARY